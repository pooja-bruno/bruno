meta {
  name: user_info_request-auth
  type: http
  seq: 2
}

get {
  url: {{key-host}}/realms/bruno/protocol/openid-connect/userinfo
  body: none
  auth: oauth2
}

auth:oauth2 {
  grant_type: password
  access_token_url: {{key-host}}/realms/bruno/protocol/openid-connect/token
  refresh_token_url: 
  username: {{name}}
  password: pooja
  client_id: client
  client_secret: k6ILR58dd1OXFKc83OEQgxUmpB1jF5Q1
  scope: openid
  credentials_placement: body
  credentials_id: credentials
  token_placement: header
  token_header_prefix: Bearer
  auto_fetch_token: true
  auto_refresh_token: false
}

script:pre-request {
  // const axios = require('axios');
  
  // async function getToken() {
  //   try {
  //     // Manually encode the data as application/x-www-form-urlencoded
  //     const data = `client_id=account&grant_type=password&username=pooja&password=pooja`;
  
  //     const response = await axios.post(
  //       "http://localhost:8080/realms/bruno/protocol/openid-connect/token",
  //       data,
  //       {
  //         headers: {
  //           "Content-Type": "application/x-www-form-urlencoded"
  //         }
  //       }
  //     );
  
  //     console.log('Response:', response);
  
  //     if (response.data && response.data.access_token) {
  //       bru.setVar("token", response.data.access_token);
  //       return response.data.access_token;
  //     } else {
  //       console.error('Access token not found in response:', response.data);
  //     }
  //   } catch (error) {
  //     console.error("Error fetching token:", error);
  //   }
  // }
  
  // await getToken();
}
